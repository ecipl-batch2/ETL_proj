{{
    config(
        materialized='incremental',
        unique_key='product_id',
        incremental_strategy='merge'
    )
}}

WITH products_data AS (
    SELECT  
        PRODUCT_ID,
        PRODUCT_CATEGORY_NAME,
        CAST(PRODUCT_NAME_LENGTH AS INT) AS PRODUCT_NAME_LENGTH,
        CAST(PRODUCT_DESCRIPTION_LENGTH AS INT) AS PRODUCT_DESCRIPTION_LENGTH,
        CAST(PRODUCT_PHOTOS_QTY AS INT) AS PRODUCT_PHOTOS_QTY,
        CAST(PRODUCT_WEIGHT_G AS INT) AS PRODUCT_WEIGHT_G,
        CAST(PRODUCT_LENGTH_CM AS INT) AS PRODUCT_LENGTH_CM,
        CAST(PRODUCT_HEIGHT_CM AS INT) AS PRODUCT_HEIGHT_CM,
        CAST(PRODUCT_WIDTH_CM AS INT) AS PRODUCT_WIDTH_CM,
        CAST(OPERATION AS INT) AS OPERATION,
        TRANSACTION_TIME
    FROM
        {{ source('bronze', 'products') }}
),

products_clean_data as (
    SELECT 
        PRODUCT_ID,
        IFNULL(PRODUCT_CATEGORY_NAME, 'N/A') AS PRODUCT_CATEGORY_NAME,
        IFNULL(PRODUCT_NAME_LENGTH, 0) AS PRODUCT_NAME_LENGTH,
        IFNULL(PRODUCT_DESCRIPTION_LENGTH, 0) AS PRODUCT_DESCRIPTION_LENGTH,
        IFNULL(PRODUCT_PHOTOS_QTY, 0) AS PRODUCT_PHOTOS_QTY,
        IFNULL(PRODUCT_WEIGHT_G, 0) AS PRODUCT_WEIGHT_G,
        IFNULL(PRODUCT_LENGTH_CM, 0) AS PRODUCT_LENGTH_CM,
        IFNULL(PRODUCT_HEIGHT_CM, 0) AS PRODUCT_HEIGHT_CM,
        IFNULL(PRODUCT_WIDTH_CM, 0) AS PRODUCT_WIDTH_CM,
        OPERATION,
        TRANSACTION_TIME,
        ROW_NUMBER() OVER (PARTITION BY PRODUCT_ID ORDER BY TRANSACTION_TIME DESC) AS rn
    FROM 
        products_data
),

latest_products_data AS (
    SELECT 
        *
    FROM 
        products_clean_data
    WHERE rn = 1
)

SELECT DISTINCT
    PRODUCT_ID,
    PRODUCT_CATEGORY_NAME,
    PRODUCT_NAME_LENGTH,
    PRODUCT_DESCRIPTION_LENGTH,
    PRODUCT_PHOTOS_QTY,
    PRODUCT_WEIGHT_G,
    PRODUCT_LENGTH_CM,
    PRODUCT_HEIGHT_CM,
    PRODUCT_WIDTH_CM,  
    OPERATION,
    TRANSACTION_TIME
FROM
    latest_products_data

{% if is_incremental() %}
    WHERE TRANSACTION_TIME > (SELECT MAX(TRANSACTION_TIME) FROM {{ this }})
{% endif %}